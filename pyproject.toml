[tool.poetry]
name = "followread"
version = "0.1.0"
description = ""
authors = ["Christopher Flores"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "4.1.7"
django-configurations = "2.4"
django-filter = "22.1"
djangorestframework = "3.14.0"
psycopg2 = "2.9.5"
gunicorn = "20.1.0"
python-decouple = "3.8"
django-rest-framework-social-oauth2 = "1.1.0"
django-oauth-toolkit = "1.5.0"
djangorestframework-types = "^0.8.0"
django-cors-headers = "^3.14.0"
drf-nested-routers = "^0.93.4"
turbobus = "==1.0.0a5"
pillow = "^10.1.0"
pandas = "^2.1.3"
pytz = "^2023.3.post1"

[tool.poetry.group.dev.dependencies]
ruff = "0.0.254"
mock = "5.0.1"
factory-boy = "3.2.1"
django-nose = "1.4.7"
coverage = "7.2.1"
pyright = "^1.1.301"
djangorestframework-stubs = "^1.10.0"

[tool.pyright]
stubPath = "./src/common/typings"
exclude = ["./src/common/typings", "./src/**/test", "./.venv", "./docs"]
ignore = ["./src/**/urls.py", "./src/**/__init__.py"]
typeCheckingMode = "basic"
reportUnnecessaryCast = "error"
reportMissingTypeStubs = false
reportImportCycles = false
reportMissingImports = true
reportUnusedImport = true
reportUnknownParameterType = "none"
reportUnknownMemberType = "none"
reportUnknownLambdaType = "none"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
